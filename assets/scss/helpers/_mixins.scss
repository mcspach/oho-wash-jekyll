// --------------------------------------------------
// Mixins
// --------------------------------------------------

// --------- Menu Levels
$ul--level-one: 'nav > ul';
$li--level-one: 'nav > ul > li';

$ul--level-two: 'nav > ul > li > ul';
$li--level-two: 'nav > ul > li > ul > li';

$ul--level-three: 'nav > ul > li > ul > li > ul';
$li--level-three: 'nav > ul > li > ul > li > ul >li';

/*
 INTRUCTIONS FOR USE: 
		#{$ul--level-one} { rules }
		.parent #{$ul--level-one} { rules }
		#{$ul--level-one} .child { rules }
*/

@mixin side-nav-border-levels($color: #ccc, $level_max: 4, $border_multiplier: 4) {
  // Set the base style of the left border
  a {
    border-left: 0 solid $color;
  }
  
  // Generate a selector for each level
  $level_up: "> li > ul";
  $level_one: "> li a";
  $selector: #{$level_one};
  
  @for $i from 0 through $level_max {
   #{$selector} { /* level #{$i} */
     border-left-width: #{$i * $border_multiplier}px;
   }
   
   $selector: #{$level_up}#{$selector};
  }
}

/*
 * Solid color transition from left to right on hover
 * Credit: https://stackoverflow.com/a/17212432
 */
@mixin animation-bgcolor-swipe($start_color: #666, $end_color: orange) {
  background: linear-gradient(to left, $start_color 50%, $end_color 50%);
  background-size: 200% 100%;
  background-position: right bottom;
  
  &:hover {
    background-position: left bottom;
  }
}


 // ----------------------------------
 
@mixin small {
  @media #{$small-up} {
    @content;
  }
}

@mixin small-only {
  @media #{$small-only} {
    @content;
  }
}

@mixin medium-down {
  @media only screen and (max-width: upper-bound($small-range)) {
    @content;
  }
}

@mixin medium {
  @media #{$medium-up} {
    @content;
  }
}

@mixin medium-only {
  @media #{$medium-only} {
    @content;
  }
}

@mixin large-down {
  @media only screen and (max-width: upper-bound($medium-range)) {
    @content;
  }
}

@mixin large {
  @media #{$large-up} {
    @content;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}


@mixin fontAwesome {
  font-family: 'FontAwesome';
  font-weight: 400;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}


@mixin obj-left {
  margin-bottom: 20px;
  @media #{$medium-up} {
    margin: 0;
    float: left;
    padding: 10px 35px 10px 0px;
    figcaption {
      padding: 0px 15px 10px 0px;
    }
  }
}

@mixin obj-right {
  margin-bottom: 20px;
  @media #{$medium-up} {
    float: right;
    padding: 10px 0px 10px 35px;
    margin: 0;
    figcaption {
      padding: 0px 0px 10px 35px;
    }
  }
}

@mixin obj-center {
  margin-top: rem-calc(40);
  margin-bottom: rem-calc(40);
  margin-left: auto;
  margin-right: auto;
}


//
// @mixins
//
// Grid Columns
//
// A mixin to help make Foundation's grid-column mixin easier 
// to use when specifying multiple media quries/screen sizes
//
// More info here:
// http://foundation.zurb.com/forum/posts/1026-include-multiple-column-mixins
//
@mixin grid-columns(
        $small-up-screens: false,
       $medium-up-screens: false,
        $large-up-screens: false,
       $xlarge-up-screens: false,
      $xxlarge-up-screens: false,
      $small-only-screens: false,
     $medium-only-screens: false,
      $large-only-screens: false,
     $xlarge-only-screens: false,
    $xxlarge-only-screens: false ){
  // Small and up screens  
  @if $small-up-screens {
    @include grid-column($small-up-screens);
  }
  // Medium and up screens
  @if $medium-up-screens {
    @media #{$medium-up} {
      @include grid-column($medium-up-screens);
    }
  }
  // Large and up screens
  @if $large-up-screens {
    @media #{$large-up} {
      @include grid-column($large-up-screens);
    }
  }
  // XLarge and up screens
  @if $xlarge-up-screens {
    @media #{$xlarge-up} {
      @include grid-column($xlarge-up-screens);
    }
  }
  // XXLarge and up screens
  @if $xxlarge-up-screens {
    @media #{$xxlarge-up} {
      @include grid-column($xxlarge-up-screens);
    }
  }
  // Small only screens  
  @if $small-only-screens {
    @media #{$small-only} {
      @include grid-column($small-only-screens);
    }
  }
  // Medium only screens
  @if $medium-only-screens {
    @media #{$medium-only} {
      @include grid-column($medium-only-screens);
    }
  }
  // Large only screens
  @if $large-only-screens {
    @media #{$large-only} {
      @include grid-column($large-only-screens);
    }
  }
  // XLarge only screens
  @if $xlarge-only-screens {
    @media #{$xlarge-only} {
      @include grid-column($xlarge-only-screens);
    }
  }
  // XXLarge only screens
  @if $xxlarge-only-screens {
    @media #{$xxlarge-only} {
      @include grid-column($xxlarge-only-screens);
    }
  }
}

/*
RESPONSIVE PADDING MARGINS AND FONT SIZES
------------------------------------------
*/
@mixin margins-bottom($small-value, $medium-value, $large-value) {
  margin-bottom: rem-calc($small-value);
  @media #{$medium-up} {
    margin-bottom: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    margin-bottom: rem-calc($large-value);    
  }
}
@mixin margins-top($small-value, $medium-value, $large-value) {
  margin-top: rem-calc($small-value);
  @media #{$medium-up} {
    margin-top: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    margin-top: rem-calc($large-value);    
  }
}
@mixin paddings-bottom($small-value, $medium-value, $large-value) {
  padding-bottom: rem-calc($small-value);
  @media #{$medium-up} {
    padding-bottom: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    padding-bottom: rem-calc($large-value);    
  }
}
@mixin paddings-top($small-value, $medium-value, $large-value) {
  padding-top: rem-calc($small-value);
  @media #{$medium-up} {
    padding-top: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    padding-top: rem-calc($large-value);    
  }
}
@mixin paddings-left-right($small-value, $medium-value, $large-value) {
  padding-left: rem-calc($small-value);
  padding-right: rem-calc($small-value);
  @media #{$medium-up} {
    padding-left: rem-calc($small-value);
    padding-right: rem-calc($small-value);   
  }
  @media #{$large-up} {
    padding-left: rem-calc($large-value);    
    padding-right: rem-calc($large-value);
  }
}
@mixin font-sizes($small-value, $medium-value, $large-value) {
  font-size: rem-calc($small-value);
  @media #{$medium-up} {
    font-size: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    font-size: rem-calc($large-value);    
  }
}
@mixin line-heights($small-value, $medium-value, $large-value) {
  line-height: rem-calc($small-value);
  @media #{$medium-up} {
    line-height: rem-calc($medium-value);    
  }
  @media #{$large-up} {
    line-height: rem-calc($large-value);    
  }
}
@mixin flex-column($width) {
  flex: 0 0 $width;
  max-width: $width;
  width: $width;
}
@mixin unset-button() {
  border: none;
  background: none;
  padding: 0;
}
@mixin line-decoration($max-width, $width-small, $height, $color, $color-small, $position, $distance) {
  position: relative;
  width: 100%;
  max-width: $max-width;
  height: $height;
  background: $color;
  @if $position == 'bottom' {
    margin-top: $distance;
  } @else {
    margin-bottom: $distance;
  }
  &:before {
    content: "";
    position: absolute;
    width: 100%;
    max-width: $width-small;
    height: $height;
    background-color: $color-small;
  }
}
@mixin unset-bullets {
  padding-left: 0;
  list-style: none;
  li {
    padding-left: 0;
  }
}